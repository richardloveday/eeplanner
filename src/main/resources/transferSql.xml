<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <util:map id="transferSQLQueries" map-class="java.util.LinkedHashMap">

        <entry key="getTransferListByYear">
            <value>
                SELECT t.* FROM `eeplanner`.`transfer` t
                where year(t.outbound_departure) = :year
                and deleted = false or deleted = :showDeleted
                ;
            </value>
        </entry>

        <entry key="getTransferList">
            <value>
                select *
                from eeplanner.transfer
                where deleted = false or deleted = :showDeleted
                order by :orderBy
                ;
            </value>
        </entry>
        <entry key="storeNewTransfer">
            <value>
                insert into eeplanner.transfer
                (outbound_type, outbound_reference, outbound_departure, outbound_departure_point, outbound_arrival,
                outbound_arrival_point, outbound_notes, return_type, return_reference, return_departure,
                return_departure_point, return_arrival, return_arrival_point, return_notes)
                values
                (:outboundType, :outboundReference, :outboundDeparture, :outboundDeparturePoint, :outboundArrival,
                :outboundArrivalPoint, :outboundNotes, :returnType, :returnReference, :returnDeparture,
                :returnDeparturePoint, :returnArrival, :returnArrivalPoint, :returnNotes)
            </value>
        </entry>
        <entry key="editTransfer">
            <value>
                UPDATE `eeplanner`.`transfer`
                SET
                `outbound_type` = :outboundType ,
                `outbound_reference` = :outboundReference ,
                `outbound_departure` = :outboundDeparture ,
                `outbound_departure_point` = :outboundDeparturePoint ,
                `outbound_arrival` = :outboundArrival ,
                `outbound_arrival_point` = :outboundArrivalPoint ,
                `outbound_notes` = :outboundNotes ,
                `return_type` = :returnType ,
                `return_reference` = :returnReference ,
                `return_departure` = :returnDeparture ,
                `return_departure_point` = :returnDeparturePoint ,
                `return_arrival` = :returnArrival ,
                `return_arrival_point` = :returnArrivalPoint ,
                `return_notes` = :returnNotes
                WHERE id = :ID;

                ;
            </value>
        </entry>
        <entry key="getTransferByID">
            <value>
                select *
                from eeplanner.transfer
                where id = ?
                ;
            </value>
        </entry>
        <entry key="setDeleted">
            <value>
                update eeplanner.transfer set
                    deleted = :isDeleted
                where id = :ID
                ;
            </value>
        </entry>
    </util:map>

</beans>