<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util-2.0.xsd">

    <util:map id="flightSQLQueries" map-class="java.util.LinkedHashMap">



        <entry key="getFlightListByYear">
            <value>
					SELECT t.* FROM `eeplanner`.`flight` t
					where year(t.outboundDeparture) = :year
					and (deleted = false or deleted = :showDeleted) 
					;
            </value>
        </entry>


        <entry key="getFlightByCampAndStaffID">
            <value>                 
					SELECT t.* FROM `eeplanner`.`flight` t
					left join eeplanner.itinerary it on t.ID = it.flight_id
					left join eeplanner.camp c on c.ID = tc.campID
					left join eeplanner.campstaff cs on cs.campID = c.ID
					left join eeplanner.staff s on s.ID = cs.staffID
					where i.staffID = :staffID and s.ID = :staffID and c.ID = :campID
					;
            </value>
      </entry> 
        <entry key="setDeleted">
            <value>
                update eeplanner.flight set
                    deleted = :isDeleted
                where ID = :ID
                ;
            </value>
        </entry>

        <entry key="getFlightList">
            <value>
                select *                    
                from eeplanner.flight 
                where deleted = false or deleted = :showDeleted 
                order by :orderBy
                ;
            </value>
        </entry>
        <entry key="getFlightByStaffMemberIDCampID">
            <value>
                select *
                from eeplanner.flight t
                inner join eeplanner.itinerary it it.flightID = t.ID
                where fc.campID = :campID
                and fs.staffID = :staffMemberID
                ;
            </value>
        </entry>
        <entry key="getFlightsByCampID">
            <value>
                select *

                from eeplanner.flight t
                inner join eeplanner.camp cmp on cmp.ID = t.campID
                where cmp.ID = ?
                ;
            </value>
        </entry>
        <entry key="getFlightByID">
            <value>
                select *
                from eeplanner.flight
                where ID = ?
                ;
            </value>
        </entry>
        <entry key="storeNewFlight">
            <value>
                insert into eeplanner.flight (carrier, type, flightNumber, returnFlightNumber,
                                               destination, outboundArrival, outboundDeparture,
                                               returnArrival, returnDeparture,
                                               cost, campID, numberOfSeats, airport, notes)

                values (:carrier, :type, :flightNumber, :returnFlightNumber,
                        :destination, :outboundArrival, :outboundDeparture,
                        :returnArrival, :returnDeparture,
                        :cost, :campID, :numberOfSeats, :airport, :notes)
            </value>
        </entry>
        <entry key="editFlight">
            <value>
                update eeplanner.flight set
                    carrier = :carrier,
                    type = :type,
                    flightNumber = :flightNumber,
                    returnFlightNumber = :returnFlightNumber,
                    outboundArrival = :outboundArrival,
                    outboundDeparture = :outboundDeparture,
                    returnArrival = :returnArrival,
                    returnDeparture = :returnDeparture,
                    cost = :cost,
                    campID = :campID,
                    numberOfSeats = :numberOfSeats,
                    airport = :airport,
                    deleted = :deleted,
                    notes = :notes
                    
                where ID = :ID
                ;
            </value>
        </entry>
        <entry key="removeFlightStaffMember">
            <value>
                delete from eeplanner.flightstaff
                where staffID = :staffMemberID and flightID = :flightID
                ;
            </value>
        </entry>
        <entry key="getFlightsByItineraryID">
            <value>
                select *
                from eeplanner.flight
                where itineraryID = ?
                ;
            </value>
        </entry>                    
        <entry key="removeAllFlights">
            <value>
                delete from eeplanner.flight
                ;
            </value>
        </entry> 
                <entry key="removeFlight">
            <value>
                delete from eeplanner.flight
                where ID = :ID
                ;
            </value>
        </entry>   
    </util:map>

</beans>